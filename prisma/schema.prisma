// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Status {
  ONLINE
  OFFLINE
}

enum OrderStatus {
  PREPARING
  PREPARED
  DELIVERING
  DELIVERED
}

enum EntityRole {
  ADMIN
  CUSTOMER
  RESTAURANT
}

model Entity {
  id Int @id @unique @default(autoincrement())
  email String @db.VarChar(80) @unique
  role EntityRole
  hashed_password String @db.VarChar(60)

  customer_profile Customer?
  restaurant_profile Restaurant?
  admin_profile Admin?

  @@map("entity")
}

model Customer {
  id Int @id @unique @default(autoincrement())
  name String @db.VarChar(64)
  city String @db.VarChar(64)
  
  entity Entity @relation(fields: [entity_id], references: [id], onDelete: Cascade)
  entity_id Int @unique

  cart Cart[]
  @@map("customers") 
}

model Restaurant {
  id Int @id @unique @default(autoincrement())
  name String @db.VarChar(64)
  city String @db.VarChar(64)
  status Status @default(OFFLINE)

  entity Entity @relation(fields: [entity_id], references: [id], onDelete: Cascade)
  entity_id Int @unique

  menu Menu[]
  cart Cart[]
  @@map("restaurants")
}

model Admin {
  id Int @id @unique @default(autoincrement())
  
  entity Entity @relation(fields: [entity_id], references: [id], onDelete: Cascade)
  entity_id Int @unique

  @@map("admins")
}

model Menu {
  id Int @id @unique @default(autoincrement())
  name String @db.VarChar(64)
  price Float @db.DoublePrecision

  restaurant Restaurant @relation(fields: [restaurant_id], references: [id], onDelete: Cascade)
  restaurant_id Int

  cart Cart[]
  @@map("menu")
}

model Cart {
  id Int @id @unique @default(autoincrement())
  qty Int 
  
  menu Menu @relation(fields: [menu_id], references: [id], onDelete: Cascade)
  menu_id Int

  restaurant Restaurant @relation(fields: [restaurant_id], references: [id], onDelete: Cascade)
  restaurant_id Int

  customer Customer @relation(fields: [customer_id], references: [id], onDelete: Cascade)
  customer_id Int

  @@map("cart")
}